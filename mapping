#!/bin/bash

# Caminho para o diretório de módulos
MODULES_DIR="$HOME/.zsh/modules"

# Função para processar arquivos de mapeamento
process_mapping_file() {
    local mapping_file="$1"
    local name type module_dir system_dir
    while IFS='=' read -r key value; do
        if [[ "$key" == "[module]" ]]; then
            if [[ -n "$name" && "$type" == "autoload" ]]; then
                # Definir a variável de ambiente para o módulo
                export "$(echo "$name" | tr '[:lower:]' '[:upper:]')_DIR=$module_dir"

                # Carregar aliases, funções e definições de variáveis
                for config_file in "$module_dir"/{aliases,functions,variables}.zsh; do
                    if [[ -f "$config_file" ]]; then
                        source "$config_file"
                    fi
                done

                # Verificar e processar a pasta System para symlinks
                system_dir="$module_dir/System"
                if [[ -d "$system_dir" ]]; then
                    find "$system_dir" -type f | while read -r file; do
                        target="${file#$system_dir}"
                        ln -sfn "$file" "$target"
                        echo "Created symlink: $file -> $target"
                    done
                fi
            fi
            name=""  # Reset name for next module
            type=""  # Reset type for next module
        elif [[ "$key" == "name" ]]; then
            name="$value"
            module_dir="$MODULES_DIR/$name"
        elif [[ "$key" == "type" ]]; then
            type="$value"
        fi
    done < "$mapping_file"
}

# Iterar através de cada diretório no projeto dotfiles
for dir in "$MODULES_DIR"/*; do
    if [[ -d "$dir" ]]; then
        local mapping_file="$dir/mapping"
        if [[ -f "$mapping_file" ]]; then
            process_mapping_file "$mapping_file"
        fi
    fi
done
