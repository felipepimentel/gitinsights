# Função para criar symlinks a partir de um arquivo de mapeamento
create_symlinks() {
    local dots_file="$1"
    local name

    while IFS= read -r line; do
        if [[ "$line" == "["* ]]; then
            # Processar o nome do symlink
            name="${line:1:-1}"
        elif [[ "$line" == *"="* ]]; then
            # Dividir a linha em chave e valor
            IFS='=' read -r key value <<< "$line"
            # Expandir variáveis de ambiente no valor
            value=$(echo "$value" | envsubst)
            # Construir a chave do array associativo
            local key_name="${name}_${key}"
            # Armazenar o valor no array associativo
            mappings["$key_name"]=$value
        fi
    done < "$dots_file"

    # Processar os mapeamentos
    for key in "${!mappings[@]}"; do
        if [[ "$key" =~ _type$ ]]; then
            local name="${key%_type}"
            local type="${mappings[$key]}"
            local source="${mappings[${name}_source]}"
            local target="${mappings[${name}_target]}"

            if [[ "$type" == "symlink" ]]; then
                # Verificar se o symlink já existe e aponta para a fonte correta
                if [[ -L "$target" && $(readlink "$target") == "$source" ]]; then
                    echo "Symlink already exists: $target -> $source"
                else
                    # Se o target é um arquivo ou diretório, mas não um symlink, faça backup e crie o symlink
                    if [[ -e "$target" && ! -L "$target" ]]; then
                        mv "$target" "$target.bak"
                        echo "Moved existing file to $target.bak"
                    fi
                    ln -s "$source" "$target"
                    echo "Created symlink: $source -> $target"
                fi

                # Verificar se o proprietário do symlink é o usuário corrente
                if [[ $(stat -c '%U' "$target") == "$SUDO_USER" ]]; then
                    echo "Owner of $target is already $SUDO_USER"
                else
                    sudo chown "$SUDO_USER":"$SUDO_USER" "$target"
                    echo "Set owner of $target to $SUDO_USER"
                fi
            fi
        fi
    done
}
